`timescale 1ns / 1ps

module tb_pe_array();
    reg aclk;
    reg aresetn;
    reg start;
    reg [31:0] rddata;
    wire [31:0] wrdata;
    wire [31:0] rdaddr;
    wire done;
    wire [3:0] we;
    wire bram_clk;

    reg [31:0] mem [0:8191]; // 128 of 32 bit data
    
    integer i;
    
    initial begin
        aclk <= 1;
        aresetn <= 0;
        start <= 0;
                
        // weight matrix
//        mem[0] <= 'h3f000000;
//        mem[1] <= 'h3f800000;
//        mem[2] <= 'h3fc00000;
//        mem[3] <= 'h40000000;
//        mem[4] <= 'h40200000;
//        mem[5] <= 'h40400000;
//        mem[6] <= 'h40600000;
//        mem[7] <= 'h40800000;
        
//        mem[8] <= 'h40900000;
//        mem[9] <= 'h40a00000;
//        mem[10] <= 'h40b00000;
//        mem[11] <= 'h40c00000;
//        mem[12] <= 'h40d00000;
//        mem[13] <= 'h40e00000;
//        mem[14] <= 'h40f00000;
//        mem[15] <= 'h41000000;
        
//        mem[16] <= 'h41080000;
//        mem[17] <= 'h41100000;
//        mem[18] <= 'h41180000;
//        mem[19] <= 'h41200000;
//        mem[20] <= 'h41280000;
//        mem[21] <= 'h41300000;
//        mem[22] <= 'h41380000;
//        mem[23] <= 'h41400000;
        
//        mem[24] <= 'h41480000;
//        mem[25] <= 'h41500000;
//        mem[26] <= 'h41580000;
//        mem[27] <= 'h41600000;
//        mem[28] <= 'h41680000;
//        mem[29] <= 'h41700000;
//        mem[30] <= 'h41780000;
//        mem[31] <= 'h41800000;
        
//        mem[32] <= 'h41840000;
//        mem[33] <= 'h41880000;
//        mem[34] <= 'h418c0000;
//        mem[35] <= 'h41900000;
//        mem[36] <= 'h41940000;
//        mem[37] <= 'h41980000;
//        mem[38] <= 'h419c0000;
//        mem[39] <= 'h41a00000;
        
//        mem[40] <= 'h41a40000;
//        mem[41] <= 'h41a80000;
//        mem[42] <= 'h41ac0000;
//        mem[43] <= 'h41b00000;
//        mem[44] <= 'h41b40000;
//        mem[45] <= 'h41b80000;
//        mem[46] <= 'h41bc0000;
//        mem[47] <= 'h41c00000;

//        mem[48] <= 'h41c40000;
//        mem[49] <= 'h41c80000;
//        mem[50] <= 'h41cc0000;
//        mem[51] <= 'h41d00000;
//        mem[52] <= 'h41d40000;
//        mem[53] <= 'h41d80000;
//        mem[54] <= 'h41dc0000;
//        mem[55] <= 'h41e00000;
        
//        mem[56] <= 'h41e40000;
//        mem[57] <= 'h41e80000;
//        mem[58] <= 'h41ec0000;
//        mem[59] <= 'h41f00000;
//        mem[60] <= 'h41f40000;
//        mem[61] <= 'h41f80000;
//        mem[62] <= 'h41fc0000;
//        mem[63] <= 'h42000000;
        
//        // input matrix
//        mem[64] <= 'hc2000000;
//        mem[65] <= 'hc1f00000;
//        mem[66] <= 'hc1e00000;
//        mem[67] <= 'hc1d00000;
//        mem[68] <= 'hc1c00000;
//        mem[69] <= 'hc1b00000;
//        mem[70] <= 'hc1a00000;
//        mem[71] <= 'hc1900000;
        
//        mem[72] <= 'hc1800000;
//        mem[73] <= 'hc1700000;
//        mem[74] <= 'hc1600000;
//        mem[75] <= 'hc1500000;
//        mem[76] <= 'hc1400000;
//        mem[77] <= 'hc1300000;
//        mem[78] <= 'hc1200000;
//        mem[79] <= 'hc1100000;
        
//        mem[80] <= 'hc1000000;
//        mem[81] <= 'hc0e00000;
//        mem[82] <= 'hc0c00000;
//        mem[83] <= 'hc0a00000;
//        mem[84] <= 'hc0800000;
//        mem[85] <= 'hc0400000;
//        mem[86] <= 'hc0000000;
//        mem[87] <= 'hbf800000;

//        mem[88] <= 'hbf000000;
//        mem[89] <= 'hbe800000;
//        mem[90] <= 'hbe000000;
//        mem[91] <= 'hbd800000;
//        mem[92] <= 'hbd000000;
//        mem[93] <= 'hbc800000;
//        mem[94] <= 'hbc000000;
//        mem[95] <= 'hbb800000;

//        mem[96] <= 'h00000000;
//        mem[97] <= 'h3b800000;
//        mem[98] <= 'h3c000000;
//        mem[99] <= 'h3c800000;
//        mem[100] <= 'h3d000000;
//        mem[101] <= 'h3d800000;
//        mem[102] <= 'h3e000000;
//        mem[103] <= 'h3e800000;      
        
//        mem[104] <= 'h3f000000;
//        mem[105] <= 'h3f800000;
//        mem[106] <= 'h40000000;
//        mem[107] <= 'h40800000;
//        mem[108] <= 'h41000000;
//        mem[109] <= 'h41800000;
//        mem[110] <= 'h42000000;
//        mem[111] <= 'h42800000;
        
//        mem[112] <= 'h43000000;
//        mem[113] <= 'h43800000;
//        mem[114] <= 'h44000000;
//        mem[115] <= 'h44800000;
//        mem[116] <= 'h45000000;
//        mem[117] <= 'h45800000;
//        mem[118] <= 'h46000000;
//        mem[119] <= 'h46800000;
        
//        mem[120] <= 'h47000000;
//        mem[121] <= 'h47800000;
//        mem[122] <= 'h48000000;
//        mem[123] <= 'h48800000;
//        mem[124] <= 'h49000000;
//        mem[125] <= 'h49800000;
//        mem[126] <= 'h4a000000;
//        mem[127] <= 'h4a800000;

        mem[0*4] <= 'h3f571690;
        mem[1*4] <= 'h3ec9ec92;
        mem[2*4] <= 'h3f48792d;
        mem[3*4] <= 'h3f4c6690;
        mem[4*4] <= 'h3f6961b3;
        mem[5*4] <= 'h3e4a4acf;
        mem[6*4] <= 'h3eaba259;
        mem[7*4] <= 'h3f44aab9;
        
        mem[8*4] <= 'h40900000;
        mem[9*4] <= 'h40a00000;
        mem[10*4] <= 'h40b00000;
        mem[11*4] <= 'h40c00000;
        mem[12*4] <= 'h40d00000;
        mem[13*4] <= 'h40e00000;
        mem[14*4] <= 'h40f00000;
        mem[15*4] <= 'h41000000;
        
        mem[16*4] <= 'h41080000;
        mem[17*4] <= 'h41100000;
        mem[18*4] <= 'h41180000;
        mem[19*4] <= 'h41200000;
        mem[20*4] <= 'h41280000;
        mem[21*4] <= 'h41300000;
        mem[22*4] <= 'h41380000;
        mem[23*4] <= 'h41400000;
        
        mem[24*4] <= 'h41480000;
        mem[25*4] <= 'h41500000;
        mem[26*4] <= 'h41580000;
        mem[27*4] <= 'h41600000;
        mem[28*4] <= 'h41680000;
        mem[29*4] <= 'h41700000;
        mem[30*4] <= 'h41780000;
        mem[31*4] <= 'h41800000;
        
        mem[32*4] <= 'h41840000;
        mem[33*4] <= 'h41880000;
        mem[34*4] <= 'h418c0000;
        mem[35*4] <= 'h41900000;
        mem[36*4] <= 'h41940000;
        mem[37*4] <= 'h41980000;
        mem[38*4] <= 'h419c0000;
        mem[39*4] <= 'h41a00000;
        
        mem[40*4] <= 'h41a40000;
        mem[41*4] <= 'h41a80000;
        mem[42*4] <= 'h41ac0000;
        mem[43*4] <= 'h41b00000;
        mem[44*4] <= 'h41b40000;
        mem[45*4] <= 'h41b80000;
        mem[46*4] <= 'h41bc0000;
        mem[47*4] <= 'h41c00000;

        mem[48*4] <= 'h41c40000;
        mem[49*4] <= 'h41c80000;
        mem[50*4] <= 'h41cc0000;
        mem[51*4] <= 'h41d00000;
        mem[52*4] <= 'h41d40000;
        mem[53*4] <= 'h41d80000;
        mem[54*4] <= 'h41dc0000;
        mem[55*4] <= 'h41e00000;
        
        mem[56*4] <= 'h41e40000;
        mem[57*4] <= 'h41e80000;
        mem[58*4] <= 'h41ec0000;
        mem[59*4] <= 'h41f00000;
        mem[60*4] <= 'h41f40000;
        mem[61*4] <= 'h41f80000;
        mem[62*4] <= 'h41fc0000;
        mem[63*4] <= 'h42000000;
        
        // input matrix
        mem[64*4] <= 'h3e888872;
        mem[65*4] <= 'hc1f00000;
        mem[66*4] <= 'hc1e00000;
        mem[67*4] <= 'hc1d00000;
        mem[68*4] <= 'hc1c00000;
        mem[69*4] <= 'hc1b00000;
        mem[70*4] <= 'hc1a00000;
        mem[71*4] <= 'hc1900000;
        
        mem[72*4] <= 'h3ee01217;
        mem[73*4] <= 'hc1700000;
        mem[74*4] <= 'hc1600000;
        mem[75*4] <= 'hc1500000;
        mem[76*4] <= 'hc1400000;
        mem[77*4] <= 'hc1300000;
        mem[78*4] <= 'hc1200000;
        mem[79*4] <= 'hc1100000;
        
        mem[80*4] <= 'h3f3017a9;
        mem[81*4] <= 'hc0e00000;
        mem[82*4] <= 'hc0c00000;
        mem[83*4] <= 'hc0a00000;
        mem[84*4] <= 'hc0800000;
        mem[85*4] <= 'hc0400000;
        mem[86*4] <= 'hc0000000;
        mem[87*4] <= 'hbf800000;

        mem[88*4] <= 'h3eb36263;
        mem[89*4] <= 'hbe800000;
        mem[90*4] <= 'hbe000000;
        mem[91*4] <= 'hbd800000;
        mem[92*4] <= 'hbd000000;
        mem[93*4] <= 'hbc800000;
        mem[94*4] <= 'hbc000000;
        mem[95*4] <= 'hbb800000;

        mem[96*4] <= 'h3ecbffef;
        mem[97*4] <= 'h3b800000;
        mem[98*4] <= 'h3c000000;
        mem[99*4] <= 'h3c800000;
        mem[100*4] <= 'h3d000000;
        mem[101*4] <= 'h3d800000;
        mem[102*4] <= 'h3e000000;
        mem[103*4] <= 'h3e800000;      
        
        mem[104*4] <= 'h3e17342f;
        mem[105*4] <= 'h3f800000;
        mem[106*4] <= 'h40000000;
        mem[107*4] <= 'h40800000;
        mem[108*4] <= 'h41000000;
        mem[109*4] <= 'h41800000;
        mem[110*4] <= 'h42000000;
        mem[111*4] <= 'h42800000;
        
        mem[112*4] <= 'h3ee4e1a4;
        mem[113*4] <= 'h43800000;
        mem[114*4] <= 'h44000000;
        mem[115*4] <= 'h44800000;
        mem[116*4] <= 'h45000000;
        mem[117*4] <= 'h45800000;
        mem[118*4] <= 'h46000000;
        mem[119*4] <= 'h46800000;
        
        mem[120*4] <= 'h3dd34b51;
        mem[121*4] <= 'h47800000;
        mem[122*4] <= 'h48000000;
        mem[123*4] <= 'h48800000;
        mem[124*4] <= 'h49000000;
        mem[125*4] <= 'h49800000;
        mem[126*4] <= 'h4a000000;
        mem[127*4] <= 'h4a800000;
        
        #20;
        aresetn <= 1;
        start <= 1; 
    end
    
    always @(posedge aclk)
        rddata <= mem[rdaddr];
    
    pe_array_v2 MY_PE_ARRAY (
        .S_AXI_ACLK(aclk),
        .S_AXI_ARESETN(aresetn),
        .start(start),
        .BRAM_RDDATA(rddata),
        .BRAM_WRDATA(wrdata),
        .BRAM_ADDR(rdaddr),
        .done(done),
        .BRAM_WE(we),
        .BRAM_CLK(bram_clk)
    );
    
    always #5 aclk = ~aclk;
endmodule
